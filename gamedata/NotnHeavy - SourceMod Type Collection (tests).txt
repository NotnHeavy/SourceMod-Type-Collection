"Games"
{
    "tf"
    {
        "Offsets"
        {
            "CTFWearable::Equip"
            {
                "windows" "232"
                "linux"   "238"
            }
			"CBaseCombatCharacter::Weapon_ShootPosition()"
            {
                "windows" "275"
                "linux"   "276"
            }
			"CTFFlameManager::m_Points"
			{
				"windows" "1180"
				"linux"   "1204"
			}
			"CTFFlameManager::AddPoint()"
			{
				"windows" "198"
				"linux"   "199"
			}
        }
        "Signatures"
        {
			"ImageBase"
			{
				"library" "server"
				"windows" "\x4D\x5A"
			}
            "CBaseEntity::TakeDamage" // offset aCbaseentityTak ; "CBaseEntity::TakeDamage:  with inputInf"...
			{
				"library" "server"
				"windows" "\x55\x8B\xEC\x81\xEC\x98\x00\x00\x00\x53\x8B\xD9"
				"linux"   "@_ZN11CBaseEntity10TakeDamageERK15CTakeDamageInfo"
			}
            "CTFPlayer::OnTakeDamage" // offset aAbortedPlayerC ; "    ABORTED: Player can't take damage f"...
			{
				"library" "server"
				"windows" "\x55\x8B\xEC\x81\xEC\xA4\x05\x00\x00"
				"linux"	  "@_ZN9CTFPlayer12OnTakeDamageERK15CTakeDamageInfo"
			}
			"CTFPlayer::TraceAttack()" // offset aUberchargeTran ; "ubercharge_transfer"
			{
				"library" "server"
				"windows" "\x55\x8B\xEC\x81\xEC\x90\x00\x00\x00\x57\x8B\xF9\x80\xBF\xF9\x00\x00\x00\x02"
				"linux"   "@_ZN9CTFPlayer11TraceAttackERK15CTakeDamageInfoRK6VectorP10CGameTraceP15CDmgAccumulator"
			}
			"CTFGameRules::RadiusDamage" // offset aAddHealthOnRad ; "add_health_on_radius_damage"
			{
				"library" "server"
				"windows" "\x55\x8B\xEC\x81\xEC\x24\x08\x00\x00\x53"
				"linux"	  "@_ZN12CTFGameRules12RadiusDamageER19CTFRadiusDamageInfo"
			}
        }
        "Functions"
        {
            "CTFPlayer::OnTakeDamage"
			{
				"signature"	"CTFPlayer::OnTakeDamage"
				"callconv"	"thiscall"
				"return"	"int" 
				"this"		"entity"
				"arguments"
				{
					"inputInfo"
					{
						"type" "int"
					}
				}
			}
			"CTFPlayer::TraceAttack()"
			{
				"signature" "CTFPlayer::TraceAttack()"
				"callconv"  "thiscall"
				"return"    "void"
				"this"      "entity"
				"arguments"
				{
					"info"
					{
						"type" "int"
					}
					"vecDir"
					{
						"type" "int"
					}
					"ptr"
					{
						"type" "int"
					}
					"pAccumulator"
					{
						"type" "int"
					}
				}
			}
			"CTFFlameManager::AddPoint()"
			{
				"offset"		"CTFFlameManager::AddPoint()"
				"hooktype"		"entity"
				"this"			"entity"
				"return"		"bool"
				"arguments"
				{
					"nSpawnTime"
					{
						"type"	"int"
					}
				}	
			}
        }
    }
}